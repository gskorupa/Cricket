<?xml version="1.0" encoding="UTF-8"?>
<project name="Cricket" default="all" basedir=".">
    <description>Builds, tests, and runs the project Cricket.</description>
    <target name="all" depends="dist">
        <!-- TODO define script. See Help menu or http://ant.apache.org/ -->
    </target>
    <!-- set global properties for this build -->
    <property name="version" value="1.2.30"/>
    <property name="src" location="src/java"/>
    <property name="build" location="build/classes"/>
    <property name="dist" location="dist"/>
    <property name="web" location="web"/>
    <property name="lib" location="lib"/>
    <property name="jar-name" value="cricket-${version}.jar"/>
    
    <!-- define Maven repository coordinates -->
    <property name="groupId" value="org.cricketmsf" />
    <property name="artifactId" value="cricket" />
    <!-- define artifacts' name, which follows the convention of Maven -->
    <property name="jar" value="${dist}/${artifactId}-${version}.jar" />
    <property name="javadoc-jar" value="${dist}/${artifactId}-${version}-javadoc.jar" />
    <property name="sources-jar" value="${dist}/${artifactId}-${version}-sources.jar" />
    
    <!-- used external libraries -->
    <property name="json-io-lib" value="json-io-4.9.7.jar"/>
    <property name="commons-csv-lib" value="commons-csv-1.2.jar"/>
    
    
    <path id="project-classpath">
        <pathelement location="${lib}/${json-io-lib}"/>
        <pathelement location="${lib}/${commons-csv-lib}"/>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp>
            <format property="version" pattern="yyyy.MM.dd"/>
        </tstamp>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <propertyfile file="${src}/cricket.properties">
            <entry  key="version" value="${version}"/>
        </propertyfile>
    </target>

    <target name="compile" depends="init" description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac 
            target="1.8" 
            source="1.8" 
            srcdir="${src}" 
            destdir="${build}"
            includeantruntime="false" 
            debug="on"
            classpathref="project-classpath">
            <!--<compilerarg value="-Xlint:unchecked"/>-->
        </javac>
    </target>
    
    <target name="doc" depends="init">
        <javadoc packagenames="org.cricketmsf.*"
                 sourcepath="${src}"
                 defaultexcludes="yes"
                 destdir="docs/javadoc"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="Cricket Microservices Framework">
            <doctitle><![CDATA[<h1>Cricket Microservices Framework</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2016, 2017 Grzegorz Skorupa.</i>]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <link offline="true" href="http://docs.oracle.com/javase/8/docs/api/" packagelistLoc="C:\tmp"/>
            <link href="http://docs.oracle.com/javase/8/docs/api/"/>
        </javadoc>
        <jar basedir="docs/javadoc" destfile="${javadoc-jar}" />
    </target>

    <target name="dist" depends="clean, compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        <delete file="./data/cricket_publickeystore.jks" failonerror="false"></delete>
        <genkey alias="cricket" 
                keystore="./data/cricket_publickeystore.jks" 
                storepass="cricket15$#17" 
                keypass="cricket15$#17" 
                keyalg="RSA" 
                keysize="2048" 
                validity="720">
            <dname>
                <param name="CN" value="localhost"/>
                <param name="OU" value="Cricket MSF"/>
            </dname>
        </genkey>
        <antcall inheritall="true" target="jar"/>
    </target>
    
    <target name="distribution" depends="clean, compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        <antcall inheritall="true" target="jar"/>
        <antcall inheritall="true" target="doc"/>
        <jar basedir="src" destfile="${sources-jar}"/>
    </target>

    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
    
    <target name="jar" depends="compile">
        <copy todir="${build}" overwrite="true">
            <fileset dir="${src}" includes="*.properties"/>
            <fileset dir="${src}" includes="*.json"/>
            <fileset dir="${src}" includes="*.txt"/>
        </copy>
        <jar  
            destfile="${dist}/${jar-name}">
            <manifest>
                <attribute name="Main-Class" value="org.cricketmsf.Runner"/>
            </manifest>
            <fileset dir="${build}"/>
            <zipfileset src="${lib}/${json-io-lib}" includes="com/**/*"/>
            <zipfileset src="${lib}/${commons-csv-lib}" includes="org/**/*"/>
        </jar>
    </target>
    
</project>
