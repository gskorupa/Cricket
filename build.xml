<?xml version="1.0" encoding="UTF-8"?>
<project name="Cricket" default="all" basedir=".">
    <description>Builds, tests, and runs the project Vricket.</description>
    <target name="all" depends="init,jar">
        <!-- TODO define script. See Help menu or http://ant.apache.org/ -->
    </target>
    <!-- set global properties for this build -->
    <property name="version" value="1.0-B8"/>
    <property name="src" location="src/java"/>
    <property name="build" location="build/web/WEB-INF/classes"/>
    <property name="dist" location="dist"/>
    <property name="web" location="web"/>
    <property name="lib" location="lib"/>
    <property name="jar-name" value="cricket-${version}.jar"/>
    <property name="jar-name-lite" value="cricket-lite-${version}.jar"/>
    <property name="war-name" value="cricket-${version}.war"/>
    <property name="standalone-lib" location="templates/standalone/lib"/>
    <property name="tomcat-home" value="/home/greg/apache-tomcat-7.0.67" />

    <path id="project-classpath">
        <pathelement location="${lib}/json-io-4.3.0.jar"/>
        <fileset dir="${tomcat-home}/bin" includes="*.jar" />
        <fileset dir="${tomcat-home}/lib" includes="*.jar" />
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init" description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac 
            target="1.8" 
            source="1.8" 
            srcdir="${src}" 
            destdir="${build}"
            includeantruntime="false" 
            classpathref="project-classpath">
            <compilerarg value="-Xlint:-options"/>          
        </javac>
    </target>
    
    <target name="doc" depends="init">
        <javadoc packagenames="org.cricketmsf.*"
                 sourcepath="${src}"
                 defaultexcludes="yes"
                 destdir="docs/api"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="Cricket MSF API">
            <doctitle><![CDATA[<h1>Cricket Microservices Framework</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2016 Grzegorz Skorupa.</i>]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <link offline="true" href="http://docs.oracle.com/javase/8/docs/api/" packagelistLoc="C:\tmp"/>
            <link href="http://docs.oracle.com/javase/8/docs/api/"/>
        </javadoc>
    </target>

    <target name="dist" depends="clean, compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
        <antcall inheritall="true" target="jar"/>
        <copy file="${dist}/${jar-name}" todir="${standalone-lib}" overwrite="true"/>
        <!--<copy file="${dist}/${jar-name-lite}" todir="${standalone-lib}" overwrite="true"/>-->
    </target>

    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
    
    <target name="jar" depends="compile">
        <copy todir="${build}" overwrite="true">
            <fileset dir="${src}" includes="*.properties"/>
            <fileset dir="${src}" includes="*.json"/>
            <fileset dir="${src}" includes="*.txt"/>
        </copy>
        <jar  
            destfile="${dist}/${jar-name}">
            <manifest>
                <attribute name="Main-Class" value="org.cricketmsf.Runner"/>
            </manifest>
            <fileset dir="${build}"/>
            <zipfileset src="${lib}/json-io-4.3.0.jar" includes="com/**/*"/>
        </jar>
        <!--
        <jar  
            destfile="${dist}/${jar-name-lite}">
            <manifest>
                <attribute name="Main-Class" value="org.cricketmsf.Runner"/>
            </manifest>
            <fileset dir="${build}"/>
            <zipfileset src="${lib}/json-io-4.3.0.jar" includes="com/**/*"/>
        </jar>
        -->
    </target>
    
    <target name="war" depends="jar">
        <war destfile="${dist}/${war-name}" webxml="web/WEB-INF/web.xml">
            <lib dir="lib"></lib>
            <classes dir="build/web/WEB-INF/classes"/>
        </war>
    </target>
</project>
